/* !important keyword ensures properties are always applied regardless of order or specificity https://developer.mozilla.org/en-US/docs/Web/CSS/important */
span[class~="sr-only"] {
     border: 0 !important;
    /* [Step 31 & 47 - clip property is deprecated ](https://developer.mozilla.org/en-US/docs/Web/CSS/clip#browser_compatibility) */
    /* clip: rect(1px, 1px, 1px, 1px); */
    /* Desired effect is acheived with the following propery setting - but tests still require both? */
    clip-path: inset(50%) !important; 
    width: 1px !important;
    height: 1px !important;
    overflow: hidden !important;
    white-space: nowrap !important;
    position: absolute !important;
    padding: 0 !important;
    margin: -1px !important;
}

html {
    box-sizing: border-box;
}

body {
    font-family: sans-serif;
    color: #0a0a23;
}

h1 {
    max-width: 37.25rem;
    margin: 0 auto;
    padding: 1.5rem 1.25rem;
}

h1 .flex {
    display: flex;
    flex-direction: column-reverse;
    gap: 1rem;
}

/* first-of-type pseudo selector targets the first element (span in this case) */
h1 .flex span:first-of-type {
    font-size: 0.7em;
}

h1 .flex span:last-of-type {
    font-size: 1.2em;
}

section {
    max-width: 40rem;
    margin: 0 auto;
    border: 2px solid #d0d0d5;
}

#years {
    display: flex;
    justify-content: flex-end;
    /* https://developer.mozilla.org/en-US/docs/Web/CSS/position */
    position: sticky;
    /* https://developer.mozilla.org/en-US/docs/Web/CSS/top */
    top: 0;
    color: #fff;
    background-color: #0a0a23;
    margin: 0 -2px;
    /* https://developer.mozilla.org/en-US/docs/Web/CSS/calc */
    padding: 0.5rem calc(1.25rem + 2px) 0.5rem 0;
    /* Sticky positioning are moved into their own stack.  z-index can prevent other elements from obscuring this stack. */
    z-index: 999;
}

/* Target #years child span elements with a class attribute */
#years span[class] {
    font-weight: bold;
    width: 4.5rem;
    text-align: right;
}

.table-wrap {
    padding: 0 0.75rem 1.5rem 0.75rem;
}
/* Target span elements without the sr-only class */
span {
    font-weight: normal;
}

table {
    border-collapse: collapse;
    border: 0;
    width: 100%;
    position: relative;
    margin-top: 3rem;
}

table caption {
    color: #356eaf;
    font-size: 1.3em;
    font-weight: normal;
    position: absolute;
    top: -2.25rem;
    left: 0.5rem; 
}

tbody td {
    width: 100vw;
    min-width: 4rem;
    max-width: 4rem;
}

tbody th {
    width: calc(100% - 12rem);
}

tr[class="total"] {
    border-bottom: 4px double #0a0a23;
    font-weight: bold;
}

/* The key difference between tr[class="total"] and tr.total is that the first will select tr elements where the only class is total.
The second will select tr elements where the class includes total.*/
tr[class="total"] th {
    text-align: left;
    padding: 0.5rem 0 0.25rem 0.5rem;
}

tr.total td {
    text-align: right;
    padding: 0 0.25rem;
}
